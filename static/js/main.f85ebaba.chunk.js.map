{"version":3,"sources":["components/Footer/Footer.tsx","components/Header/Header.tsx","api/request.ts","types/SortByField.ts","components/Loader/paw_loader.png","components/Loader/Loader.tsx","components/MainContent/CatList/CatList.tsx","components/MainContent/Maincontent.tsx","App.tsx","index.tsx"],"names":["Footer","className","href","Header","request","UIdata","fetch","method","headers","then","response","ok","Error","json","SortByField","client","Loader","src","paw","alt","CatList","list","pageData","useState","currentPage","addedPage","setAddedPage","listOfCatsToShow","setListOfCatsToShow","pageStart","loadMore","catsPerPage","sortBy","sortMethod","res","prev","cats","prevPage","hasMore","pageCount","loader","map","card","name","category","image_url","price","available","id","MainContent","isPageLoading","setIsPageLoading","isListOfCatsLoading","setIsListOfCatsLoading","listOfCats","setListOfCats","NONE","setPageData","queryPaginationParams","searchSortParams","useEffect","pagination_info","total_pages","finally","onChange","e","target","value","ID","NAME","CATEGORY","PRICE","type","onClick","limit_per_page","breakLabel","nextLabel","previousLabel","onPageChange","selected","pageRangeDisplayed","marginPagesDisplayed","forcePage","containerClassName","previousLinkClassName","breakClassName","nextLinkClassName","pageClassName","disabledClassName","activeClassName","activeLinkClassName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f85ebaba.chunk.js","sourcesContent":["import React from 'react';\nimport './Footer.scss';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <section>\n        <a\n          href=\"https://github.com/PavloMarkov?tab=repositories\"\n          className=\"footer__link\"\n        >\n          Powered by Pavlo Markov\n        </a>\n      </section>\n    </footer>\n  );\n};\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <nav>Kittens</nav>\n    </header>\n  );\n};\n","const BASE_URL = 'https://ftl-cryptokitties.fly.dev/api/crypto_kitties';\n\nfunction request<T>(\n  UIdata: string,\n): Promise<T> {\n  const options: RequestInit = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  };\n\n  return fetch(BASE_URL + UIdata, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  getSorted: <Response>(UIdata: string) => request<Response>(UIdata),\n  getPaginated: <Response>(UIdata: string) => request<Response>(UIdata),\n};\n","// eslint-disable-next-line no-shadow\nexport enum SortByField {\n  NONE = '',\n  ID = 'id',\n  NAME = 'name',\n  CATEGORY = 'category',\n  PRICE = 'price',\n}\n","export default __webpack_public_path__ + \"static/media/paw_loader.01294796.png\";","import React from 'react';\nimport './Loader.scss';\nimport paw from './paw_loader.png';\n\nexport const Loader: React.FC = () => {\n  return (\n    (\n      <div className=\"loader\">\n        <h2>Cat&apos;s are coming!</h2>\n        <img\n          className=\"loader__paw\"\n          src={paw}\n          alt=\"loading...\"\n        />\n      </div>\n    )\n  );\n};\n","import React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Response } from '../../../types/Response';\nimport { client } from '../../../api/request';\nimport { CatCard } from '../../../types/CatCard';\nimport './CatList.scss';\nimport { DataOfPage } from '../../../types/DataOfPage';\n\ntype Props = {\n  list: CatCard[];\n  pageData: DataOfPage;\n};\n\nexport const CatList: React.FC<Props> = ({\n  list,\n  pageData,\n}) => {\n  const [addedPage, setAddedPage] = useState(pageData.currentPage + 1);\n  const [listOfCatsToShow, setListOfCatsToShow] = useState(list);\n\n  const loadMoreCats = () => {\n    client.getPaginated<Response>(`?per_page=${pageData.catsPerPage}&page=${addedPage + 1}&sort_by=${pageData.sortBy || 'id'}&sort_dir=${pageData.sortMethod || 'asc'}`)\n      .then(res => {\n        setListOfCatsToShow(prev => [...prev, ...res.cats]);\n        setAddedPage(prevPage => prevPage + 1);\n      });\n  };\n\n  return (\n    <InfiniteScroll\n      pageStart={pageData.currentPage}\n      loadMore={loadMoreCats}\n      hasMore={pageData.pageCount > addedPage}\n      loader={<div className=\"loader\" key={0}>Loading ...</div>}\n    >\n      <div className=\"card-list\">\n        {listOfCatsToShow.map(card => (\n          <div\n            className=\"card\"\n            key={card.id}\n          >\n            <div className=\"card__info\">\n              <h1 className=\"card__name\">{card.name}</h1>\n              <div className=\"card__img\">\n                <div className=\"card__category\">\n                  {card.category}\n                </div>\n                <img\n                  src={card.image_url}\n                  alt={`Here should be cat ${card.name} & it's`}\n                />\n                <div className=\"card__price\">{`${card.price}$`}</div>\n              </div>\n              <div className=\"card__available\">\n                {`Now is ${card.available ? 'available' : 'not available'}`}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </InfiniteScroll>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { client } from '../../api/request';\nimport { CatCard } from '../../types/CatCard';\nimport { SortByField } from '../../types/SortByField';\nimport { SortMethod } from '../../types/SortMethod';\nimport { Loader } from '../Loader/Loader';\nimport './MainContent.scss';\nimport { Response } from '../../types/Response';\nimport { Page } from '../../types/Page';\nimport { CatList } from './CatList/CatList';\nimport { DataOfPage } from '../../types/DataOfPage';\n\nexport const MainContent: React.FC = () => {\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [isListOfCatsLoading, setIsListOfCatsLoading] = useState(false);\n  const [listOfCats, setListOfCats] = useState<CatCard[]>([]);\n\n  const [pageData, setPageData] = useState<DataOfPage>({\n    sortBy: SortByField.NONE,\n    sortMethod: '',\n    pageCount: 0,\n    catsPerPage: 50,\n    currentPage: 0,\n  });\n\n  // const [sortMethod, setSordMethod] = useState<SortMethod>('');\n  // const [sortBy, setSortBy] = useState<SortByField>(SortByField.NONE);\n\n  // const [pageCount, setPageCount] = useState(0);\n  // const [catsPerPage, setCatsPerPage] = useState(50);\n  // const [currentPage, setCurrentPage] = useState(0);\n\n  const queryPaginationParams = `?page=${pageData.currentPage + 1}&per_page=${pageData.catsPerPage}`;\n  const searchSortParams = `&sort_by=${pageData.sortBy || 'id'}&sort_dir=${pageData.sortMethod || 'asc'}`;\n\n  useEffect(() => {\n    setIsListOfCatsLoading(true);\n    fetch(\n      'https://ftl-cryptokitties.fly.dev/api/crypto_kitties',\n    )\n      .then(res => res.json())\n      .then(res => {\n        setListOfCats(res.cats);\n        setPageData(prev => ({\n          ...prev,\n          pageCount: res.pagination_info.total_pages,\n        }));\n      })\n      .finally(() => {\n        setIsPageLoading(false);\n        setIsListOfCatsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!isPageLoading) {\n      setIsListOfCatsLoading(true);\n      client.getPaginated<Response>(queryPaginationParams + searchSortParams)\n        .then(res => {\n          setListOfCats(res.cats);\n          setPageData(prev => ({\n            ...prev,\n            pageCount: res.pagination_info.total_pages,\n          }));\n        })\n        .finally(() => setIsListOfCatsLoading(false));\n    }\n  }, [pageData.currentPage]);\n\n  const handlePageClick = (e: Page) => {\n    setPageData(prev => ({\n      ...prev,\n      currentPage: e.selected,\n    }));\n  };\n\n  const sortClickHandle = () => {\n    setIsListOfCatsLoading(true);\n    client.getSorted<Response>(`?${searchSortParams}`)\n      .then(res => {\n        setListOfCats(res.cats);\n        setPageData(prev => ({\n          ...prev,\n          currentPage: 0,\n          pageCount: res.pagination_info.total_pages,\n          catsPerPage: res.pagination_info.limit_per_page,\n        }));\n      })\n      .finally(() => setIsListOfCatsLoading(false));\n  };\n\n  // const addCats = (newCats: CatCard[]) => {\n  //   setListOfCats(prevCats => [...prevCats, ...newCats]);\n  // };\n\n  return (\n    <main className=\"page__main\">\n      {!isListOfCatsLoading\n        ? (\n          <>\n            <section className=\"page__sort sort\">\n              <h4 className=\"sort__title\">Sort by:</h4>\n              <select\n                onChange={(e) => setPageData(prev => ({\n                  ...prev,\n                  sortBy: e.target.value as SortByField,\n                }))}\n                className=\"sort__select\"\n                value={pageData.sortBy}\n              >\n                <option value={SortByField.NONE}>Need to sort?</option>\n                <option value={SortByField.ID}>ID</option>\n                <option value={SortByField.NAME}>Name</option>\n                <option value={SortByField.CATEGORY}>Category</option>\n                <option value={SortByField.PRICE}>Price</option>\n              </select>\n              <select\n                onChange={(e) => setPageData(prev => ({\n                  ...prev,\n                  sortMethod: e.target.value as SortMethod,\n                }))}\n                className=\"sort__select\"\n                value={pageData.sortMethod}\n              >\n                <option value=\"\">Sort type</option>\n                <option value=\"asc\">asc</option>\n                <option value=\"desc\">desc</option>\n              </select>\n              <button\n                type=\"button\"\n                className=\"sort_btn\"\n                onClick={() => sortClickHandle()}\n              >\n                Sort cats!\n              </button>\n              <h4>\n                Meow&apos;s per page\n              </h4>\n              <select\n                onChange={(e) => setPageData(prev => ({\n                  ...prev,\n                  catsPerPage: +e.target.value,\n                }))}\n                className=\"sort__select\"\n                id=\"per-page\"\n                value={pageData.catsPerPage}\n              >\n                <option value={50}>50</option>\n                <option value={20}>20</option>\n                <option value={100}>100</option>\n              </select>\n              <button\n                type=\"button\"\n                className=\"pagination_btn\"\n                onClick={() => setPageData(prev => ({\n                  ...prev,\n                  currentPage: 0,\n                }))}\n              >\n                View cats!\n              </button>\n            </section>\n            <ReactPaginate\n              breakLabel=\"...\"\n              nextLabel=\"next >\"\n              previousLabel=\"< prev\"\n              onPageChange={handlePageClick}\n              pageRangeDisplayed={3}\n              marginPagesDisplayed={1}\n              forcePage={pageData.currentPage}\n              pageCount={pageData.pageCount}\n              containerClassName=\"pagination__container\"\n              previousLinkClassName=\"pagination__previous\"\n              breakClassName=\"pagination__page\"\n              nextLinkClassName=\"pagination__next\"\n              pageClassName=\"pagination__page\"\n              disabledClassName=\"pagination__disabled\"\n              activeClassName=\"pagination__active\"\n              activeLinkClassName=\"pagination__link\"\n            />\n            <CatList\n              list={listOfCats}\n              // addCats={addCats}\n              pageData={pageData}\n            />\n          </>\n        )\n        : <Loader />}\n    </main>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Footer } from './components/Footer/Footer';\nimport { Header } from './components/Header/Header';\nimport { MainContent } from './components/MainContent/Maincontent';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"page\">\n      <Header />\n      <MainContent />\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}